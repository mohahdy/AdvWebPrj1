{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Courses\\\\FrontEnd NanoDegree\\\\Repo\\\\AdvWebPrj1\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Courses\\\\FrontEnd NanoDegree\\\\Repo\\\\AdvWebPrj1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\Courses\\\\FrontEnd NanoDegree\\\\Repo\\\\AdvWebPrj1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Courses\\\\FrontEnd NanoDegree\\\\Repo\\\\AdvWebPrj1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Courses\\\\FrontEnd NanoDegree\\\\Repo\\\\AdvWebPrj1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Courses\\\\FrontEnd NanoDegree\\\\Repo\\\\AdvWebPrj1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Courses\\\\FrontEnd NanoDegree\\\\Repo\\\\AdvWebPrj1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Courses\\\\FrontEnd NanoDegree\\\\Repo\\\\AdvWebPrj1\\\\src\\\\App.js\";\nimport React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport PageTitle from './Components/PageTitle.js';\nimport SearchPage from './Components/SearchPage';\nimport Shelves from './Components/Shelves';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      /**\n       * TODO: Instead of using this state variable to keep track of which page\n       * we're on, use the URL in the browser's address bar. This will ensure that\n       * users can use the browser's back and forward buttons to navigate between\n       * pages, as well as provide a good URL they can bookmark and share.\n       */\n      showSearchPage: false,\n      booksFullList: [],\n      query: ''\n    };\n\n    _this.updateShelf =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(bk, targetShelf) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                //console.log(`bk = > ${bk.title}   targetShelf = > ${targetShelf}`)\n                _this.setState({\n                  booksFullList: _this.state.booksFullList.map(function (book) {\n                    bk.id === book.id ? book.shelf = targetShelf : book.shelf = book.shelf;\n                    return book;\n                  })\n                }); //console.log(\"booksFullList after map = >\"+this.state.booksFullList)\\\n\n\n                _context.prev = 1;\n                _context.next = 4;\n                return BooksAPI.update(bk, targetShelf);\n\n              case 4:\n                console.log(bk, targetShelf);\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                console.error(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 7]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"render\",\n\n    /*pdateSerachPage = async(query)=>{\n       let resp;\n      this.setState({query});\n       try{\n      \tresp = await BooksAPI.search(query);\n       }catch(error){\n       console.error(error);\n       }\n    \n      this.setState({queriedBooks:resp});\n    }*/\n    value: function render() {\n      var _this2 = this;\n\n      console.log('App.js render');\n      var books = this.state.booksFullList;\n      console.log(books);\n      /*let currentlyReadingBooks;\n      let wantToReadBooks ;\n      let readBooks ;*/\n\n      if (books != null) {\n        var currentlyReadingBooks = books.filter(function (book) {\n          return book.shelf === \"currentlyReading\";\n        });\n        var wantToReadBooks = books.filter(function (book) {\n          return book.shelf === \"wantToRead\";\n        });\n        var readBooks = books.filter(function (book) {\n          return book.shelf === \"read\";\n        });\n        console.log(books, currentlyReadingBooks, wantToReadBooks, readBooks);\n        return React.createElement(Router, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"app\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Route, {\n          path: \"/search\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(SearchPage, {\n          searchPageState: this,\n          shelfFunc: this.updateShelf,\n          booksFullList: this.state.booksFullList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        })), React.createElement(Route, {\n          path: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"list-books\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(PageTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }), React.createElement(Shelves, {\n          shelfFunc: this.updateShelf,\n          currentlyReadingBooks: currentlyReadingBooks,\n          wantToReadBooks: wantToReadBooks,\n          readBooks: readBooks,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"open-search\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: function onClick() {\n            return _this2.setState({\n              showSearchPage: true\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Add a book\")))), \"}\")));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"app\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"list-books\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(PageTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"open-search\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: function onClick() {\n            return _this2.setState({\n              showSearchPage: true\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"Add a book\"))), \") }\");\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var resp;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return BooksAPI.getAll();\n\n              case 3:\n                resp = _context2.sent;\n                console.log(resp);\n                this.setState({\n                  booksFullList: resp\n                });\n                console.log(this.state.booksFullList);\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error(_context2.t0);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 9]]);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["D:\\Courses\\FrontEnd NanoDegree\\Repo\\AdvWebPrj1\\src\\App.js"],"names":["React","BooksAPI","PageTitle","SearchPage","Shelves","BrowserRouter","Router","Switch","Route","Link","BooksApp","state","showSearchPage","booksFullList","query","updateShelf","bk","targetShelf","setState","map","book","id","shelf","update","console","log","error","books","currentlyReadingBooks","filter","wantToReadBooks","readBooks","getAll","resp","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,UAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAmB,sBAAnB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,QAKO,kBALP;;IAOMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACN;;;;;;AAMAC,MAAAA,cAAc,EAAE,KAPV;AAQNC,MAAAA,aAAa,EAAE,EART;AASNC,MAAAA,KAAK,EAAE;AATD,K;;UAYTC,W;;;;;+BAAc,iBAAMC,EAAN,EAASC,WAAT;AAAA;AAAA;AAAA;AAAA;AACX;AACC,sBAAKC,QAAL,CAAc;AAACL,kBAAAA,aAAa,EAAC,MAAKF,KAAL,CAAWE,aAAX,CAAyBM,GAAzB,CAA6B,UAAAC,IAAI,EAAE;AAC3DJ,oBAAAA,EAAE,CAACK,EAAH,KAAQD,IAAI,CAACC,EAAb,GAAgBD,IAAI,CAACE,KAAL,GAAWL,WAA3B,GAAuCG,IAAI,CAACE,KAAL,GAAWF,IAAI,CAACE,KAAvD;AACD,2BAAOF,IAAP;AACA,mBAHyB;AAAf,iBAAd,EAFU,CAOL;;;AAPK;AAAA;AAAA,uBASPnB,QAAQ,CAACsB,MAAT,CAAgBP,EAAhB,EAAmBC,WAAnB,CATO;;AAAA;AAUPO,gBAAAA,OAAO,CAACC,GAAR,CAAYT,EAAZ,EAAeC,WAAf;AAVO;AAAA;;AAAA;AAAA;AAAA;AAYPO,gBAAAA,OAAO,CAACE,KAAR;;AAZO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;AAgBX;;;;;;;;;;;6BAWO;AAAA;;AACPF,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,UAAME,KAAK,GAAG,KAAKhB,KAAL,CAAWE,aAAzB;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;;;;AAGC,UAAGA,KAAK,IAAE,IAAV,EACA;AACE,YAAMC,qBAAqB,GAAGD,KAAK,CAACE,MAAN,CAAa,UAAAT,IAAI;AAAA,iBAAIA,IAAI,CAACE,KAAL,KAAa,kBAAjB;AAAA,SAAjB,CAA9B;AACA,YAAMQ,eAAe,GAAGH,KAAK,CAACE,MAAN,CAAa,UAAAT,IAAI;AAAA,iBAAIA,IAAI,CAACE,KAAL,KAAa,YAAjB;AAAA,SAAjB,CAAxB;AACA,YAAMS,SAAS,GAAGJ,KAAK,CAACE,MAAN,CAAa,UAAAT,IAAI;AAAA,iBAAIA,IAAI,CAACE,KAAL,KAAa,MAAjB;AAAA,SAAjB,CAAlB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,EAAkBC,qBAAlB,EAAwCE,eAAxC,EAAwDC,SAAxD;AACA,eACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,UAAD;AAAY,UAAA,eAAe,EAAE,IAA7B;AAAmC,UAAA,SAAS,EAAE,KAAKhB,WAAnD;AAAgE,UAAA,aAAa,EAAE,KAAKJ,KAAL,CAAWE,aAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CADF,EAID,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADH,EAEG,oBAAC,OAAD;AAAS,UAAA,SAAS,EAAE,KAAKE,WAAzB;AAAsC,UAAA,qBAAqB,EAAEa,qBAA7D;AAAoF,UAAA,eAAe,EAAEE,eAArG;AAAsH,UAAA,SAAS,EAAEC,SAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFH,EAGG;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACb,QAAL,CAAc;AAAEN,cAAAA,cAAc,EAAE;AAAlB,aAAd,CAAN;AAAA,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAHH,CADJ,CAJC,MADA,CADA,CADA;AAqBD,OA3BD,MA2BK;AACL,eACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACM,QAAL,CAAc;AAAEN,cAAAA,cAAc,EAAE;AAAlB,aAAd,CAAN;AAAA,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAFJ,CADF,QADF;AAWC;AAEF;;;;;;;;;;;;;;uBAIYX,QAAQ,CAAC+B,MAAT,E;;;AAAbC,gBAAAA,I;AACFT,gBAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACA,qBAAKf,QAAL,CAAc;AAACL,kBAAAA,aAAa,EAACoB;AAAf,iBAAd;AACAT,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWE,aAAvB;;;;;;;AAEEW,gBAAAA,OAAO,CAACE,KAAR;;;;;;;;;;;;;;;;;EAjGqB1B,KAAK,CAACkC,S;;AAwG7B,eAAexB,QAAf","sourcesContent":["import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport PageTitle from './Components/PageTitle.js'\nimport SearchPage from'./Components/SearchPage'\nimport Shelves from'./Components/Shelves'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nclass BooksApp extends React.Component {\n  state = {\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    showSearchPage: false,\n    booksFullList: [],\n    query: '',\n    \n  };\n\tupdateShelf = async(bk,targetShelf)=>{\n    //console.log(`bk = > ${bk.title}   targetShelf = > ${targetShelf}`)\n    \tthis.setState({booksFullList:this.state.booksFullList.map(book=>{\n          bk.id===book.id?book.shelf=targetShelf:book.shelf=book.shelf;\n         return book;\n        }\n                                                                 )});\n          //console.log(\"booksFullList after map = >\"+this.state.booksFullList)\\\n      try{\n\t\tawait BooksAPI.update(bk,targetShelf);\n        console.log(bk,targetShelf)\n      }catch(error){\n        console.error(error);\n      }\n    }\n  \n  \t /*pdateSerachPage = async(query)=>{\n       let resp;\n      this.setState({query});\n       try{\n      \tresp = await BooksAPI.search(query);\n       }catch(error){\n       console.error(error);\n       }\n    \n      this.setState({queriedBooks:resp});\n    }*/\n  render() {\n    console.log('App.js render')\n    const books = this.state.booksFullList;\n    console.log(books)\n  \t/*let currentlyReadingBooks;\n  \tlet wantToReadBooks ;\n  \tlet readBooks ;*/\n    if(books!=null)\n    {\n      const currentlyReadingBooks = books.filter(book => book.shelf===\"currentlyReading\");\n      const wantToReadBooks = books.filter(book => book.shelf===\"wantToRead\");\n      const readBooks = books.filter(book => book.shelf===\"read\");\n      console.log(books,currentlyReadingBooks,wantToReadBooks,readBooks);\n      return (\n      <Router>\n      <Switch>\n      <div className=\"app\">\n        <Route path=\"/search\">\n        <SearchPage searchPageState={this} shelfFunc={this.updateShelf} booksFullList={this.state.booksFullList}/> \n      \t</Route>\n    \t<Route path=\"/\">\n         <div className=\"list-books\">\n            <PageTitle/>\n            <Shelves shelfFunc={this.updateShelf} currentlyReadingBooks={currentlyReadingBooks} wantToReadBooks={wantToReadBooks} readBooks={readBooks}/>\n            <div className=\"open-search\">\n              <a onClick={() => this.setState({ showSearchPage: true })}>Add a book</a>\n            </div>\n          </div>\n\t\t</Route>\n        }\n      </div>\n\t  </Switch>\n \t  </Router>\n    )\n    }else{\n    return (\n      <div className=\"app\">\n        <div className=\"list-books\">\n            <PageTitle/>\n            <div className=\"open-search\">\n              <a onClick={() => this.setState({ showSearchPage: true })}>Add a book</a>\n            </div>\n          </div>)\n        }\n      </div>\n\t\t)\n    }\n    \n  }\n  async componentDidMount (){\nlet resp;\n    try {\n  resp = await BooksAPI.getAll();\nconsole.log(resp)\nthis.setState({booksFullList:resp});\nconsole.log(this.state.booksFullList)\n} catch (error) {\n  console.error(error);\n}\n    \n\t\n}\n}\n\nexport default BooksApp;\n"]},"metadata":{},"sourceType":"module"}